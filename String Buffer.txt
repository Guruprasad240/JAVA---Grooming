String Buffer
-------------
Once if String is assigned a value it cannot be chanaged. 

It means if a string is reassigned with a value, the original memory location is lost and new memory location is allotted. This phenomenon is called immutabled and is an overhead to the processor.

To over come this, java designers introduced StringBufferes. StringBufferes are growable dynamically.


Using String:
-------------
import java.lang.*;
class Demo
{
	public static void main(String[] args)
	{
		long l1 = System.currentTimeMillis();
		String s1 = "";

		for(int i=0; i<=10000; i++)
		{
			s1 += (int)(Math.random()*10+1) + " ,";
		}
		long l2 = System.currentTimeMillis();

		System.out.println("Time took : " + (l2-l1) + " ms");
	}
}


Above Program Using StringBuffer:
---------------------------------
import java.lang.*;
class Demo
{
	public static void main(String[] args)
	{
		long l1 = System.currentTimeMillis();
		String s1 = "";
		StringBuffer sb = new StringBuffer(s1);

		for(int i=0; i<=10000; i++)
		{
			sb.append((int)(Math.random()*10+1) + " ,");
			//s1 += (int)(Math.random()*10+1) + " ,";
		}
		long l2 = System.currentTimeMillis();

		System.out.println("Time took : " + (l2-l1) + " ms \n\n");
		System.out.print("StringBuffer Text : \n" + sb.toString());
	}
}



To Find the length and capacity of the StringBuffer
---------------------------------------------------
class Demo
{
	public static void main(String[] args)
	{
		StringBuffer sb1 = new StringBuffer();
		StringBuffer sb2 = new StringBuffer("10");
		StringBuffer sb3 = new StringBuffer("Hello");

		System.out.println();
		System.out.println("To Convert StringBuffer to String");
		System.out.println("---------------------------------");
		System.out.println("sb2 = " + sb2.toString() + "\nsb3 = " + sb3.toString() + "\n");

		System.out.println("To Find the Lenght of StringBuffer");
		System.out.println("----------------------------------");
		System.out.println("Lenght of sb1 = " + sb1.length());
		System.out.println("Lenght of sb2 = " + sb2.length());
		System.out.println("Lenght of sb3 = " + sb3.length() + "\n");

		System.out.println("To Find the Capacity of StringBuffer");
		System.out.println("------------------------------------");
		System.out.println("Capacity of sb1 = " + sb1.capacity());
		System.out.println("Capacity of sb2 = " + sb2.capacity());
		System.out.println("Capacity of sb3 = " + sb3.capacity() + "\n");

		sb1.ensureCapacity(50);
		System.out.println("New Capacity of sb1 = " + sb1.capacity());

	}
}



Using indexes
-------------
class Demo
{
	public static void main(String[] args)
	{
		StringBuffer sb1 = new StringBuffer("Hello World");

		System.out.println("\nsb1 = " + sb1.toString());
		System.out.println("Character at 0 : " + sb1.charAt(0));
		System.out.println("Character at 4 : " + sb1.charAt(4));

		System.out.println("\n\nsb1 = " + sb1.toString());
		sb1.setCharAt(0,'A');
		sb1.setCharAt(4,'B');
		System.out.println("After Setting the Characters 0 and 6 indexes \n" + sb1.toString());
		System.out.println();

		sb1 = new StringBuffer("Rama");	//will replace the previous value.
		System.out.println("New value of sb1 : " + sb1.toString());
	}
}


append() method in StringBuffer
-------------------------------
class Demo
{
	public static void main(String[] args)
	{
		Object a = "Hello";
		String b = "Good Bye";
		boolean c = true;
		int d = 7;
		double e = 45.456789;
		
		StringBuffer sb = new StringBuffer();

		sb.append(a);
		sb.append(' ');

		sb.append(b);
		sb.append(' ');

		sb.append(c);
		sb.append(' ');

		sb.append(d);
		sb.append(' ');

		sb.append(e);
		sb.append(' ');

		System.out.println(sb);
	}
}



class Demo
{
	public static void main(String[] args)
	{
		StringBuffer sb1 = new StringBuffer("Rama Rao");

		System.out.println("\nName : " + sb1);

		sb1.insert(4,"Krishna");
		System.out.println("Name : " + sb1);

		sb1.reverse();
		System.out.println("Name : " + sb1);

		sb1.reverse();
		System.out.println("Name : " + sb1);

		sb1.delete(1,3);
		System.out.println("Name : " + sb1);

		sb1.delete(0, sb1.length());
		System.out.println("Name : " + sb1);
	}
}